@import: ../outline/label

module TableOfContentsElement : sig

  type t

  %% [make label title subtitle-opt author]
  val make : string -> OutlineLabel.t -> inline-text -> inline-text option -> inline-text -> t

  val get-label : t -> string
  val get-outline-label : t -> OutlineLabel.t
  val get-title : t -> inline-text
  val get-subtitle-opt : t -> inline-text option
  val get-author : t -> inline-text

end = struct

  type t =
  | TOCElementChapter of string * OutlineLabel.t * inline-text * inline-text option * inline-text

  let make label outline-label title subtitle-opt author =
    TOCElementChapter(label, outline-label, title, subtitle-opt, author)

  let get-label element =
    match element with
    | TOCElementChapter(label, _, _, _, _) -> label

  let get-outline-label element =
    match element with
    | TOCElementChapter(_, outline-label, _, _, _) -> outline-label

  let get-title element =
    match element with
    | TOCElementChapter(_, _, title, _, _) -> title

  let get-subtitle-opt element =
    match element with
    | TOCElementChapter(_, _, _, subtitle, _) -> subtitle

  let get-author element =
    match element with
    | TOCElementChapter(_, _, _, _, author) -> author

end
