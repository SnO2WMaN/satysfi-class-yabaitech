@require: base/list-ext

module Label : sig

    val or-fresh : string option -> string
    val prefix-with : string list -> string -> string

end = struct

    let generate-fresh-label =
        let-mutable count <- 0 in
        (fun () -> (
            let () = count <- !count + 1 in
            `generated:` ^ (arabic (!count))
        ))

    let or-fresh label-opt =
        match label-opt with
        | None -> generate-fresh-label ()
        | Some(label) -> label

    let prefix-with prefix-list label =
        List.fold-right (fun prefix current-label -> 
            prefix ^ `:` ^ current-label
        ) label prefix-list

end
