@require: footnote-scheme

@import: ../font-config
@import: ../document-config

module Footnote : sig

  val write : inline-text -> context -> inline-boxes

end = struct

  %% paragraph
  let make-footnote ctx =  ctx
    |> set-font-size 8pt
    |> set-leading 10pt
    |> set-paragraph-margin 4pt 4pt
    |> FontConfig.set-fontset FontConfig.serif-regular

  let write content ctx =
    let ibf num =
      let it-num = embed-string (arabic num) in
      let ctx =
        let size = get-font-size ctx in
        ctx
        |> set-font-size (size *' 0.75)
        |> set-manual-rising (size *' 0.25) in
      read-inline ctx { \*#it-num; } in
    let bbf num =
      let ib-num = read-inline ctx (embed-string (arabic num)) in
      let ctx = ctx |> make-footnote  in
      let len =
        let (w, _, _) = get-natural-metrics ib-num in
        DocumentConfig.footnote-indent -' w in
      let ib =
        ib-num
        ++ inline-skip len
        ++ embed-block-top
          ctx
          (DocumentConfig.text-width -' DocumentConfig.footnote-indent)
          (fun ctx -> (
            line-break
              false
              false
              ctx
              (read-inline ctx content ++ inline-fil))) in
      line-break false false ctx (ib ++ inline-fil) in
    FootnoteScheme.main ctx ibf bbf

end
