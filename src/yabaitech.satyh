% -*- coding: utf-8 -*-
@import: bibliography/commands
@import: chapter/commands
@import: document
@import: document-config
@import: figure/commands
@import: font-config
@import: mutables
@import: paragraph/commands
@import: theorem/commands
@import: typeset/footnote
@import: typeset/misc-commands
@import: typeset/review-comment
@import: typeset/todo

module Book : sig

  val document : 'a -> block-text -> document
    constraint 'a :: (|
      title: string;
      volume: string;
      date: string;
      author: string;
      email: string;
      website: string;
      publisher: string;
      front: string option;
    |)

  % from Bibliography
  direct \cite : [string list] inline-cmd

  % from Chapter
  direct +chapter : [string?; 'a; block-text] block-cmd
    constraint 'a :: (|
      title : inline-text;
      title-for-toc : inline-text option;
      subtitle : inline-text option;
      author : inline-text;
      bibliography : (string * bib-item) list;
    |)

  direct +section : [string?; inline-text; block-text] block-cmd
  direct +subsection : [string?; inline-text; block-text] block-cmd
  direct +subsubsection : [inline-text; block-text] block-cmd

  direct \ref-chapter : [string] inline-cmd
  direct \ref-section : [string] inline-cmd
  direct \ref-subsection : [string] inline-cmd

  % from Theoremish
  direct +definition : [inline-text?; string?; inline-text] block-cmd
  direct +theorem : [inline-text?; string?; inline-text] block-cmd
  direct +lemma : [inline-text?; string?; inline-text] block-cmd
  direct +corollary : [inline-text?; string?; inline-text] block-cmd
  direct +example : [inline-text?; string?; inline-text] block-cmd
  direct +notation : [inline-text?; string?; inline-text] block-cmd
  direct +assumption : [inline-text?; string?; inline-text] block-cmd

  direct \ref-definition : [string] inline-cmd
  direct \ref-theorem : [string] inline-cmd
  direct \ref-lemma : [string] inline-cmd
  direct \ref-corollary : [string] inline-cmd
  direct \ref-assumption : [string] inline-cmd
  direct \ref-example : [string] inline-cmd
  direct \ref-notation : [string] inline-cmd
  direct \ref-figure : [string] inline-cmd
  direct \ref-table : [string] inline-cmd

  % from MiscCommands
  direct +p : [inline-text] block-cmd
  direct +topic : [inline-text; inline-text] block-cmd
  direct +proof : [inline-text?; inline-text] block-cmd
  direct \emph : [inline-text] inline-cmd
  direct \dfn : [inline-text] inline-cmd
  direct \br : [] inline-cmd

  % from Fiure
  direct \figure : [string?; inline-text; block-text] inline-cmd
  direct \table : [string?; inline-text; block-text] inline-cmd

  % from Footnote
  direct \footnote : [inline-text] inline-cmd

  % from ReviewComment
  direct \review-comment : [string; inline-text] inline-cmd
  direct +review-comment : [string; inline-text] block-cmd

  % from TodoCommands
  direct \NEEDSREF : [] inline-cmd
  direct \REMAINS : [inline-text] inline-cmd

end = struct

  let document record inner = Document.compile record inner

  let-inline ctx \cite labels = ctx
    |> BibliographyCommands.write-cite labels

  let-inline ctx \figure ?:labelopt caption inner =
    ctx |> FigureCommands.write-figure labelopt caption inner

  let-inline ctx \table ?:labelopt caption inner =
    ctx |> FigureCommands.write-table labelopt caption inner

  let-inline ctx \ref-figure key = ctx |> FigureCommands.write-ref-figure key
  let-inline ctx \ref-table key = ctx |> FigureCommands.write-ref-table key


  let-block ctx +chapter ?:labelopt record inner =
    ctx |> ChapterCommands.render-chapter
      labelopt
      record#bibliography
      record#title
      record#title-for-toc
      record#subtitle
      record#author
      inner

  let-block ctx +section ?:labelopt title inner =
    ctx |> ChapterCommands.render-section labelopt title inner

  let-block ctx +subsection ?:labelopt title inner =
    ctx |> ChapterCommands.render-subsection labelopt title inner

  let-block ctx +subsubsection title inner =
   ctx |>  ChapterCommands.render-subsubsection (Option.none) title inner

  let-inline ctx \ref-chapter key = ctx |> ChapterCommands.write-ref-chapter key
  let-inline ctx \ref-section key = ctx |> ChapterCommands.write-ref-section key
  let-inline ctx \ref-subsection key = ctx |> ChapterCommands.write-ref-subsection key


  let-block ctx +definition ?:wordopt ?:labelopt inner =
    ctx |> TheoremCommands.render-definition labelopt wordopt inner

  let-block ctx +theorem ?:wordopt ?:labelopt inner =
    ctx |> TheoremCommands.render-theorem labelopt wordopt inner

  let-block ctx +lemma ?:wordopt ?:labelopt inner =
    ctx |> TheoremCommands.render-lemma labelopt wordopt inner

  let-block ctx +corollary ?:wordopt ?:labelopt inner =
    ctx |> TheoremCommands.render-corollary labelopt wordopt inner

  let-block ctx +assumption ?:wordopt ?:labelopt inner =
    ctx |> TheoremCommands.render-assumption labelopt wordopt inner

  let-block ctx +example ?:wordopt ?:labelopt inner =
    ctx |> TheoremCommands.render-example labelopt wordopt inner

  let-block ctx +notation ?:wordopt ?:labelopt inner =
    ctx |> TheoremCommands.render-notation labelopt wordopt inner

  let-inline ctx \ref-definition key = ctx |> TheoremCommands.write-ref-definition key
  let-inline ctx \ref-theorem key = ctx |> TheoremCommands.write-ref-theorem key
  let-inline ctx \ref-lemma key = ctx |> TheoremCommands.write-ref-lemma key
  let-inline ctx \ref-corollary key = ctx |> TheoremCommands.write-ref-corollary key
  let-inline ctx \ref-assumption key = ctx |> TheoremCommands.write-ref-assumption key
  let-inline ctx \ref-example key = ctx |> TheoremCommands.write-ref-example key
  let-inline ctx \ref-notation key = ctx |> TheoremCommands.write-ref-notation key


  let-block ctx +p inner = ctx |> ParagraphCommands.render-paragraph inner

  let-block ctx +topic topic inner =
    ctx |> ParagraphCommands.render-topic topic inner

  let-block ctx +proof ?:wordopt inner =
    ctx |> ParagraphCommands.render-proof wordopt inner

  let-inline ctx \emph inner = ctx |> MiscCommands.write-emph inner
  let-inline ctx \dfn inner = ctx |> MiscCommands.write-dfn inner
  let-inline ctx \br = ctx |> MiscCommands.write-br

  let-inline ctx \footnote it = ctx |> Footnote.write it

  let-inline ctx \review-comment reviewer comment = ctx |> ReviewComment.write reviewer comment
  let-block ctx +review-comment reviewer comment = ctx |> ReviewComment.render reviewer comment

  let-inline ctx \NEEDSREF = ctx |> TodoCommands.write-NEEDSREF
  let-inline ctx \REMAINS content = ctx |> TodoCommands.write-REMAINS content

end

let document = Book.document
  % ad-hoc
